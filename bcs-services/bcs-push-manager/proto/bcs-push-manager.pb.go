// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: proto/bcs-push-manager.proto

package pushmanager

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===== 基础结构 =====
type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{0}
}

func (x *Dimension) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// ===== 推送事件相关 =====
type EventDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EventDetail) Reset() {
	*x = EventDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDetail) ProtoMessage() {}

func (x *EventDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDetail.ProtoReflect.Descriptor instead.
func (*EventDetail) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{1}
}

func (x *EventDetail) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type NotificationResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NotificationResults) Reset() {
	*x = NotificationResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResults) ProtoMessage() {}

func (x *NotificationResults) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResults.ProtoReflect.Descriptor instead.
func (*NotificationResults) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationResults) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type MetricData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricValue float64              `protobuf:"fixed64,1,opt,name=metric_value,json=metricValue,proto3" json:"metric_value,omitempty"`
	Timestamp   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MetricData) Reset() {
	*x = MetricData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricData) ProtoMessage() {}

func (x *MetricData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricData.ProtoReflect.Descriptor instead.
func (*MetricData) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{3}
}

func (x *MetricData) GetMetricValue() float64 {
	if x != nil {
		return x.MetricValue
	}
	return 0
}

func (x *MetricData) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type PushEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId             string               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Domain              string               `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	RuleId              string               `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	EventDetail         *EventDetail         `protobuf:"bytes,4,opt,name=event_detail,json=eventDetail,proto3" json:"event_detail,omitempty"`
	PushLevel           string               `protobuf:"bytes,5,opt,name=push_level,json=pushLevel,proto3" json:"push_level,omitempty"`
	Status              int32                `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	NotificationResults *NotificationResults `protobuf:"bytes,7,opt,name=notification_results,json=notificationResults,proto3" json:"notification_results,omitempty"`
	Dimension           *Dimension           `protobuf:"bytes,8,opt,name=dimension,proto3" json:"dimension,omitempty"`
	BkBizName           string               `protobuf:"bytes,9,opt,name=bk_biz_name,json=bkBizName,proto3" json:"bk_biz_name,omitempty"`
	MetricData          *MetricData          `protobuf:"bytes,10,opt,name=metric_data,json=metricData,proto3" json:"metric_data,omitempty"`
	CreatedAt           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PushEvent) Reset() {
	*x = PushEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushEvent) ProtoMessage() {}

func (x *PushEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushEvent.ProtoReflect.Descriptor instead.
func (*PushEvent) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{4}
}

func (x *PushEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *PushEvent) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PushEvent) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *PushEvent) GetEventDetail() *EventDetail {
	if x != nil {
		return x.EventDetail
	}
	return nil
}

func (x *PushEvent) GetPushLevel() string {
	if x != nil {
		return x.PushLevel
	}
	return ""
}

func (x *PushEvent) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PushEvent) GetNotificationResults() *NotificationResults {
	if x != nil {
		return x.NotificationResults
	}
	return nil
}

func (x *PushEvent) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *PushEvent) GetBkBizName() string {
	if x != nil {
		return x.BkBizName
	}
	return ""
}

func (x *PushEvent) GetMetricData() *MetricData {
	if x != nil {
		return x.MetricData
	}
	return nil
}

func (x *PushEvent) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PushEvent) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePushEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain string     `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Event  *PushEvent `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *CreatePushEventRequest) Reset() {
	*x = CreatePushEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushEventRequest) ProtoMessage() {}

func (x *CreatePushEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushEventRequest.ProtoReflect.Descriptor instead.
func (*CreatePushEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePushEventRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreatePushEventRequest) GetEvent() *PushEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreatePushEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EventId string `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *CreatePushEventResponse) Reset() {
	*x = CreatePushEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushEventResponse) ProtoMessage() {}

func (x *CreatePushEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushEventResponse.ProtoReflect.Descriptor instead.
func (*CreatePushEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePushEventResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreatePushEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePushEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DeletePushEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain  string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *DeletePushEventRequest) Reset() {
	*x = DeletePushEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushEventRequest) ProtoMessage() {}

func (x *DeletePushEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushEventRequest.ProtoReflect.Descriptor instead.
func (*DeletePushEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePushEventRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DeletePushEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type DeletePushEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePushEventResponse) Reset() {
	*x = DeletePushEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushEventResponse) ProtoMessage() {}

func (x *DeletePushEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushEventResponse.ProtoReflect.Descriptor instead.
func (*DeletePushEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePushEventResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePushEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPushEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain  string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *GetPushEventRequest) Reset() {
	*x = GetPushEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushEventRequest) ProtoMessage() {}

func (x *GetPushEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushEventRequest.ProtoReflect.Descriptor instead.
func (*GetPushEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{9}
}

func (x *GetPushEventRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetPushEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

type GetPushEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Event   *PushEvent `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *GetPushEventResponse) Reset() {
	*x = GetPushEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushEventResponse) ProtoMessage() {}

func (x *GetPushEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushEventResponse.ProtoReflect.Descriptor instead.
func (*GetPushEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{10}
}

func (x *GetPushEventResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPushEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPushEventResponse) GetEvent() *PushEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type ListPushEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string               `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Page      int32                `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32                `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	RuleId    string               `protobuf:"bytes,4,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Status    int32                `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PushLevel string               `protobuf:"bytes,6,opt,name=push_level,json=pushLevel,proto3" json:"push_level,omitempty"`
	StartTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ListPushEventsRequest) Reset() {
	*x = ListPushEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushEventsRequest) ProtoMessage() {}

func (x *ListPushEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushEventsRequest.ProtoReflect.Descriptor instead.
func (*ListPushEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{11}
}

func (x *ListPushEventsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListPushEventsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPushEventsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPushEventsRequest) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *ListPushEventsRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListPushEventsRequest) GetPushLevel() string {
	if x != nil {
		return x.PushLevel
	}
	return ""
}

func (x *ListPushEventsRequest) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListPushEventsRequest) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type ListPushEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Events  []*PushEvent `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
	Total   int64        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPushEventsResponse) Reset() {
	*x = ListPushEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushEventsResponse) ProtoMessage() {}

func (x *ListPushEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushEventsResponse.ProtoReflect.Descriptor instead.
func (*ListPushEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{12}
}

func (x *ListPushEventsResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPushEventsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPushEventsResponse) GetEvents() []*PushEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListPushEventsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdatePushEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain  string     `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	EventId string     `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Event   *PushEvent `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *UpdatePushEventRequest) Reset() {
	*x = UpdatePushEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushEventRequest) ProtoMessage() {}

func (x *UpdatePushEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushEventRequest.ProtoReflect.Descriptor instead.
func (*UpdatePushEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{13}
}

func (x *UpdatePushEventRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *UpdatePushEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *UpdatePushEventRequest) GetEvent() *PushEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type UpdatePushEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdatePushEventResponse) Reset() {
	*x = UpdatePushEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushEventResponse) ProtoMessage() {}

func (x *UpdatePushEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushEventResponse.ProtoReflect.Descriptor instead.
func (*UpdatePushEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePushEventResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePushEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ===== 推送白名单相关 =====
type PushWhitelist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WhitelistId     string               `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	Domain          string               `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Dimension       *Dimension           `protobuf:"bytes,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Reason          string               `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Applicant       string               `protobuf:"bytes,5,opt,name=applicant,proto3" json:"applicant,omitempty"`
	Approver        string               `protobuf:"bytes,6,opt,name=approver,proto3" json:"approver,omitempty"`
	WhitelistStatus *int32               `protobuf:"varint,7,opt,name=whitelist_status,json=whitelistStatus,proto3,oneof" json:"whitelist_status,omitempty"`
	ApprovalStatus  *int32               `protobuf:"varint,8,opt,name=approval_status,json=approvalStatus,proto3,oneof" json:"approval_status,omitempty"`
	StartTime       *timestamp.Timestamp `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime         *timestamp.Timestamp `protobuf:"bytes,10,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ApprovedAt      *timestamp.Timestamp `protobuf:"bytes,11,opt,name=approved_at,json=approvedAt,proto3" json:"approved_at,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamp.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PushWhitelist) Reset() {
	*x = PushWhitelist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushWhitelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWhitelist) ProtoMessage() {}

func (x *PushWhitelist) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWhitelist.ProtoReflect.Descriptor instead.
func (*PushWhitelist) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{15}
}

func (x *PushWhitelist) GetWhitelistId() string {
	if x != nil {
		return x.WhitelistId
	}
	return ""
}

func (x *PushWhitelist) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PushWhitelist) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *PushWhitelist) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PushWhitelist) GetApplicant() string {
	if x != nil {
		return x.Applicant
	}
	return ""
}

func (x *PushWhitelist) GetApprover() string {
	if x != nil {
		return x.Approver
	}
	return ""
}

func (x *PushWhitelist) GetWhitelistStatus() int32 {
	if x != nil && x.WhitelistStatus != nil {
		return *x.WhitelistStatus
	}
	return 0
}

func (x *PushWhitelist) GetApprovalStatus() int32 {
	if x != nil && x.ApprovalStatus != nil {
		return *x.ApprovalStatus
	}
	return 0
}

func (x *PushWhitelist) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PushWhitelist) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *PushWhitelist) GetApprovedAt() *timestamp.Timestamp {
	if x != nil {
		return x.ApprovedAt
	}
	return nil
}

func (x *PushWhitelist) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PushWhitelist) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreatePushWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string         `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Whitelist *PushWhitelist `protobuf:"bytes,2,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *CreatePushWhitelistRequest) Reset() {
	*x = CreatePushWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushWhitelistRequest) ProtoMessage() {}

func (x *CreatePushWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushWhitelistRequest.ProtoReflect.Descriptor instead.
func (*CreatePushWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{16}
}

func (x *CreatePushWhitelistRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreatePushWhitelistRequest) GetWhitelist() *PushWhitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type CreatePushWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreatePushWhitelistResponse) Reset() {
	*x = CreatePushWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushWhitelistResponse) ProtoMessage() {}

func (x *CreatePushWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushWhitelistResponse.ProtoReflect.Descriptor instead.
func (*CreatePushWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePushWhitelistResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreatePushWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPushWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	WhitelistId string `protobuf:"bytes,2,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
}

func (x *GetPushWhitelistRequest) Reset() {
	*x = GetPushWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushWhitelistRequest) ProtoMessage() {}

func (x *GetPushWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushWhitelistRequest.ProtoReflect.Descriptor instead.
func (*GetPushWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{18}
}

func (x *GetPushWhitelistRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetPushWhitelistRequest) GetWhitelistId() string {
	if x != nil {
		return x.WhitelistId
	}
	return ""
}

type GetPushWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Whitelist *PushWhitelist `protobuf:"bytes,3,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *GetPushWhitelistResponse) Reset() {
	*x = GetPushWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushWhitelistResponse) ProtoMessage() {}

func (x *GetPushWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushWhitelistResponse.ProtoReflect.Descriptor instead.
func (*GetPushWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{19}
}

func (x *GetPushWhitelistResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPushWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPushWhitelistResponse) GetWhitelist() *PushWhitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type UpdatePushWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string         `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	WhitelistId string         `protobuf:"bytes,2,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	Whitelist   *PushWhitelist `protobuf:"bytes,3,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
}

func (x *UpdatePushWhitelistRequest) Reset() {
	*x = UpdatePushWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushWhitelistRequest) ProtoMessage() {}

func (x *UpdatePushWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushWhitelistRequest.ProtoReflect.Descriptor instead.
func (*UpdatePushWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{20}
}

func (x *UpdatePushWhitelistRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *UpdatePushWhitelistRequest) GetWhitelistId() string {
	if x != nil {
		return x.WhitelistId
	}
	return ""
}

func (x *UpdatePushWhitelistRequest) GetWhitelist() *PushWhitelist {
	if x != nil {
		return x.Whitelist
	}
	return nil
}

type UpdatePushWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdatePushWhitelistResponse) Reset() {
	*x = UpdatePushWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushWhitelistResponse) ProtoMessage() {}

func (x *UpdatePushWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushWhitelistResponse.ProtoReflect.Descriptor instead.
func (*UpdatePushWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{21}
}

func (x *UpdatePushWhitelistResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePushWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeletePushWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain      string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	WhitelistId string `protobuf:"bytes,2,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
}

func (x *DeletePushWhitelistRequest) Reset() {
	*x = DeletePushWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushWhitelistRequest) ProtoMessage() {}

func (x *DeletePushWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushWhitelistRequest.ProtoReflect.Descriptor instead.
func (*DeletePushWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{22}
}

func (x *DeletePushWhitelistRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DeletePushWhitelistRequest) GetWhitelistId() string {
	if x != nil {
		return x.WhitelistId
	}
	return ""
}

type DeletePushWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePushWhitelistResponse) Reset() {
	*x = DeletePushWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushWhitelistResponse) ProtoMessage() {}

func (x *DeletePushWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushWhitelistResponse.ProtoReflect.Descriptor instead.
func (*DeletePushWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{23}
}

func (x *DeletePushWhitelistResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePushWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListPushWhitelistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain          string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Page            int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Applicant       string `protobuf:"bytes,4,opt,name=applicant,proto3" json:"applicant,omitempty"`
	WhitelistStatus *int32 `protobuf:"varint,5,opt,name=whitelist_status,json=whitelistStatus,proto3,oneof" json:"whitelist_status,omitempty"`
	ApprovalStatus  *int32 `protobuf:"varint,6,opt,name=approval_status,json=approvalStatus,proto3,oneof" json:"approval_status,omitempty"`
}

func (x *ListPushWhitelistsRequest) Reset() {
	*x = ListPushWhitelistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushWhitelistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushWhitelistsRequest) ProtoMessage() {}

func (x *ListPushWhitelistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushWhitelistsRequest.ProtoReflect.Descriptor instead.
func (*ListPushWhitelistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{24}
}

func (x *ListPushWhitelistsRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListPushWhitelistsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPushWhitelistsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPushWhitelistsRequest) GetApplicant() string {
	if x != nil {
		return x.Applicant
	}
	return ""
}

func (x *ListPushWhitelistsRequest) GetWhitelistStatus() int32 {
	if x != nil && x.WhitelistStatus != nil {
		return *x.WhitelistStatus
	}
	return 0
}

func (x *ListPushWhitelistsRequest) GetApprovalStatus() int32 {
	if x != nil && x.ApprovalStatus != nil {
		return *x.ApprovalStatus
	}
	return 0
}

type ListPushWhitelistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       uint32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Whitelists []*PushWhitelist `protobuf:"bytes,3,rep,name=whitelists,proto3" json:"whitelists,omitempty"`
	Total      int64            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPushWhitelistsResponse) Reset() {
	*x = ListPushWhitelistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushWhitelistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushWhitelistsResponse) ProtoMessage() {}

func (x *ListPushWhitelistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushWhitelistsResponse.ProtoReflect.Descriptor instead.
func (*ListPushWhitelistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{25}
}

func (x *ListPushWhitelistsResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPushWhitelistsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPushWhitelistsResponse) GetWhitelists() []*PushWhitelist {
	if x != nil {
		return x.Whitelists
	}
	return nil
}

func (x *ListPushWhitelistsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ApprovePushWhitelistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain         string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	WhitelistId    string `protobuf:"bytes,2,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	ApprovalStatus int32  `protobuf:"varint,3,opt,name=approval_status,json=approvalStatus,proto3" json:"approval_status,omitempty"`
	Approver       string `protobuf:"bytes,4,opt,name=approver,proto3" json:"approver,omitempty"`
}

func (x *ApprovePushWhitelistRequest) Reset() {
	*x = ApprovePushWhitelistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovePushWhitelistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovePushWhitelistRequest) ProtoMessage() {}

func (x *ApprovePushWhitelistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovePushWhitelistRequest.ProtoReflect.Descriptor instead.
func (*ApprovePushWhitelistRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{26}
}

func (x *ApprovePushWhitelistRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ApprovePushWhitelistRequest) GetWhitelistId() string {
	if x != nil {
		return x.WhitelistId
	}
	return ""
}

func (x *ApprovePushWhitelistRequest) GetApprovalStatus() int32 {
	if x != nil {
		return x.ApprovalStatus
	}
	return 0
}

func (x *ApprovePushWhitelistRequest) GetApprover() string {
	if x != nil {
		return x.Approver
	}
	return ""
}

type ApprovePushWhitelistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ApprovePushWhitelistResponse) Reset() {
	*x = ApprovePushWhitelistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovePushWhitelistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovePushWhitelistResponse) ProtoMessage() {}

func (x *ApprovePushWhitelistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovePushWhitelistResponse.ProtoReflect.Descriptor instead.
func (*ApprovePushWhitelistResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{27}
}

func (x *ApprovePushWhitelistResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ApprovePushWhitelistResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ===== 推送模版相关 =====
type TemplateContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Body      string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Variables []string `protobuf:"bytes,3,rep,name=variables,proto3" json:"variables,omitempty"`
}

func (x *TemplateContent) Reset() {
	*x = TemplateContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemplateContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateContent) ProtoMessage() {}

func (x *TemplateContent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateContent.ProtoReflect.Descriptor instead.
func (*TemplateContent) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{28}
}

func (x *TemplateContent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TemplateContent) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *TemplateContent) GetVariables() []string {
	if x != nil {
		return x.Variables
	}
	return nil
}

type PushTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId   string               `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Domain       string               `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	TemplateType string               `protobuf:"bytes,3,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Content      *TemplateContent     `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Creator      string               `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *PushTemplate) Reset() {
	*x = PushTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushTemplate) ProtoMessage() {}

func (x *PushTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushTemplate.ProtoReflect.Descriptor instead.
func (*PushTemplate) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{29}
}

func (x *PushTemplate) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *PushTemplate) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PushTemplate) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *PushTemplate) GetContent() *TemplateContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *PushTemplate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PushTemplate) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type CreatePushTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain   string        `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Template *PushTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *CreatePushTemplateRequest) Reset() {
	*x = CreatePushTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushTemplateRequest) ProtoMessage() {}

func (x *CreatePushTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreatePushTemplateRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{30}
}

func (x *CreatePushTemplateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreatePushTemplateRequest) GetTemplate() *PushTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type CreatePushTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreatePushTemplateResponse) Reset() {
	*x = CreatePushTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePushTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePushTemplateResponse) ProtoMessage() {}

func (x *CreatePushTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePushTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreatePushTemplateResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{31}
}

func (x *CreatePushTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreatePushTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPushTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	TemplateId string `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
}

func (x *GetPushTemplateRequest) Reset() {
	*x = GetPushTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushTemplateRequest) ProtoMessage() {}

func (x *GetPushTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetPushTemplateRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{32}
}

func (x *GetPushTemplateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetPushTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type GetPushTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Template *PushTemplate `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *GetPushTemplateResponse) Reset() {
	*x = GetPushTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPushTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPushTemplateResponse) ProtoMessage() {}

func (x *GetPushTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPushTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetPushTemplateResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{33}
}

func (x *GetPushTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPushTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPushTemplateResponse) GetTemplate() *PushTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type UpdatePushTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string        `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	TemplateId string        `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Template   *PushTemplate `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *UpdatePushTemplateRequest) Reset() {
	*x = UpdatePushTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushTemplateRequest) ProtoMessage() {}

func (x *UpdatePushTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdatePushTemplateRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{34}
}

func (x *UpdatePushTemplateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *UpdatePushTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UpdatePushTemplateRequest) GetTemplate() *PushTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type UpdatePushTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdatePushTemplateResponse) Reset() {
	*x = UpdatePushTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePushTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePushTemplateResponse) ProtoMessage() {}

func (x *UpdatePushTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePushTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdatePushTemplateResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{35}
}

func (x *UpdatePushTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePushTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeletePushTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain     string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	TemplateId string `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
}

func (x *DeletePushTemplateRequest) Reset() {
	*x = DeletePushTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushTemplateRequest) ProtoMessage() {}

func (x *DeletePushTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeletePushTemplateRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{36}
}

func (x *DeletePushTemplateRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DeletePushTemplateRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type DeletePushTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeletePushTemplateResponse) Reset() {
	*x = DeletePushTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePushTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePushTemplateResponse) ProtoMessage() {}

func (x *DeletePushTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePushTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeletePushTemplateResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{37}
}

func (x *DeletePushTemplateResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePushTemplateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListPushTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Page         int32  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     int32  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	TemplateType string `protobuf:"bytes,4,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"`
	Creator      string `protobuf:"bytes,5,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *ListPushTemplatesRequest) Reset() {
	*x = ListPushTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushTemplatesRequest) ProtoMessage() {}

func (x *ListPushTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListPushTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{38}
}

func (x *ListPushTemplatesRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ListPushTemplatesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPushTemplatesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPushTemplatesRequest) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *ListPushTemplatesRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type ListPushTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      uint32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Templates []*PushTemplate `protobuf:"bytes,3,rep,name=templates,proto3" json:"templates,omitempty"`
	Total     int64           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPushTemplatesResponse) Reset() {
	*x = ListPushTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bcs_push_manager_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPushTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPushTemplatesResponse) ProtoMessage() {}

func (x *ListPushTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bcs_push_manager_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPushTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListPushTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_proto_bcs_push_manager_proto_rawDescGZIP(), []int{39}
}

func (x *ListPushTemplatesResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPushTemplatesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPushTemplatesResponse) GetTemplates() []*PushTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *ListPushTemplatesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_bcs_push_manager_proto protoreflect.FileDescriptor

var file_proto_bcs_push_manager_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x63, 0x73, 0x2d, 0x70, 0x75, 0x73, 0x68,
	0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x09, 0x44,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x86, 0x01, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x3c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x44, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x69, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xa6, 0x04, 0x0a,
	0x09, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x53, 0x0a, 0x14, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x34, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x6b, 0x5f, 0x62, 0x69, 0x7a, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6b, 0x42, 0x69,
	0x7a, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x75, 0x73,
	0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x62, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xa2, 0x02,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x73, 0x68, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x79, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xfe, 0x04, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x10, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x09,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x91,
	0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x57, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x10, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68,
	0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a,
	0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0a,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x9d, 0x01, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x22, 0x4c, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x59,
	0x0a, 0x0f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x0c, 0x50, 0x75,
	0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6a, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x51, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x7e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x75,
	0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x22, 0x8b, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x4a,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x22, 0x4a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa2, 0x01, 0x0a,
	0x18, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xdc, 0x1b, 0x0a,
	0x0b, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0xc4, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x23, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x66, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x29, 0x22, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x34, 0x12,
	0x12, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b,
	0xe4, 0xbb, 0xb6, 0x1a, 0x1e, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x96, 0xb0, 0xe7, 0x9a,
	0x84, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0xe8, 0xae, 0xb0,
	0xe5, 0xbd, 0x95, 0x12, 0xce, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75,
	0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a, 0x2f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x36, 0x12, 0x12,
	0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b, 0xe4,
	0xbb, 0xb6, 0x1a, 0x20, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6,
	0x49, 0x44, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba,
	0x8b, 0xe4, 0xbb, 0xb6, 0x12, 0xde, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x4e, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6,
	0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0x1a, 0x38, 0xe6, 0xa0, 0xb9,
	0xe6, 0x8d, 0xae, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0xaa, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b,
	0xe4, 0xbb, 0xb6, 0xe7, 0x9a, 0x84, 0xe8, 0xaf, 0xa6, 0xe7, 0xbb, 0x86, 0xe4, 0xbf, 0xa1, 0xe6,
	0x81, 0xaf, 0xe3, 0x80, 0x82, 0x12, 0xe0, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75,
	0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x84, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x92, 0x41, 0x55, 0x12, 0x12, 0xe5, 0x88, 0x97, 0xe5, 0x87, 0xba, 0xe6, 0x8e, 0xa8, 0xe9, 0x80,
	0x81, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0x1a, 0x3f, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6,
	0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0xe5, 0x88, 0x97, 0xe8, 0xa1,
	0xa8, 0xef, 0xbc, 0x8c, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5,
	0xe5, 0x92, 0x8c, 0xe5, 0xa4, 0x9a, 0xe7, 0xa7, 0x8d, 0xe8, 0xbf, 0x87, 0xe6, 0xbb, 0xa4, 0xe6,
	0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0xe3, 0x80, 0x82, 0x12, 0xf7, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x70,
	0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x98, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34,
	0x1a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x5b, 0x12, 0x12, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6,
	0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0x1a, 0x45, 0xe6, 0x9b, 0xb4,
	0xe6, 0x96, 0xb0, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0xe7,
	0x9a, 0x84, 0xe4, 0xbb, 0xbb, 0xe6, 0x84, 0x8f, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0xef, 0xbc,
	0x8c, 0xe6, 0x9c, 0xaa, 0xe6, 0x8f, 0x90, 0xe4, 0xbe, 0x9b, 0xe7, 0x9a, 0x84, 0xe5, 0xad, 0x97,
	0xe6, 0xae, 0xb5, 0xe5, 0xb0, 0x86, 0xe4, 0xbf, 0x9d, 0xe6, 0x8c, 0x81, 0xe4, 0xb8, 0x8d, 0xe5,
	0x8f, 0x98, 0x12, 0x82, 0x02, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x70, 0x75, 0x73,
	0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d,
	0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x61, 0x12, 0x15, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x8e,
	0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x1a, 0x48, 0xe5,
	0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe6, 0x8e, 0xa8, 0xe9, 0x80,
	0x81, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0xe8, 0xae, 0xb0, 0xe5, 0xbd, 0x95,
	0xef, 0xbc, 0x8c, 0xe7, 0x94, 0xa8, 0xe4, 0xba, 0x8e, 0xe5, 0xb1, 0x8f, 0xe8, 0x94, 0xbd, 0xe7,
	0x89, 0xb9, 0xe5, 0xae, 0x9a, 0xe7, 0xbb, 0xb4, 0xe5, 0xba, 0xa6, 0xe7, 0x9a, 0x84, 0xe6, 0x8e,
	0xa8, 0xe9, 0x80, 0x81, 0xe3, 0x80, 0x82, 0x12, 0xef, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x27, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x84, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x2a, 0x37, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x42, 0x12, 0x15, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6,
	0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x1a, 0x29,
	0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x49,
	0x44, 0xe5, 0x88, 0xa0, 0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99, 0xbd,
	0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0xe3, 0x80, 0x82, 0x12, 0xf6, 0x01, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x27, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x75, 0x73,
	0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8b, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x1a, 0x37, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x77, 0x68, 0x69,
	0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x46, 0x12, 0x15, 0xe6, 0x9b,
	0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d,
	0xe5, 0x8d, 0x95, 0x1a, 0x2d, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x8e, 0xb0, 0xe6, 0x9c,
	0x89, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95,
	0xe7, 0x9a, 0x84, 0xe9, 0x85, 0x8d, 0xe7, 0xbd, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe3,
	0x80, 0x82, 0x12, 0xf6, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2a, 0x12, 0x28, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75,
	0x73, 0x68, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x92, 0x41, 0x5b,
	0x12, 0x15, 0xe5, 0x88, 0x97, 0xe5, 0x87, 0xba, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99,
	0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x1a, 0x42, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6,
	0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0xe5, 0x88,
	0x97, 0xe8, 0xa1, 0xa8, 0xef, 0xbc, 0x8c, 0xe6, 0x94, 0xaf, 0xe6, 0x8c, 0x81, 0xe5, 0x88, 0x86,
	0xe9, 0xa1, 0xb5, 0xe5, 0x92, 0x8c, 0xe5, 0xa4, 0x9a, 0xe7, 0xa7, 0x8d, 0xe8, 0xbf, 0x87, 0xe6,
	0xbb, 0xa4, 0xe6, 0x9d, 0xa1, 0xe4, 0xbb, 0xb6, 0xe3, 0x80, 0x82, 0x12, 0xfb, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x24, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x57, 0x68, 0x69, 0x74,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d,
	0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x2f, 0x7b, 0x77, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x92,
	0x41, 0x57, 0x12, 0x15, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81,
	0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x1a, 0x3e, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d,
	0xae, 0xe7, 0x99, 0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5,
	0x8f, 0x96, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0xaa, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe7, 0x99,
	0xbd, 0xe5, 0x90, 0x8d, 0xe5, 0x8d, 0x95, 0xe7, 0x9a, 0x84, 0xe8, 0xaf, 0xa6, 0xe7, 0xbb, 0x86,
	0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe3, 0x80, 0x82, 0x12, 0xd3, 0x01, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x6c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x22, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x37, 0x12, 0x12, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba,
	0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x21, 0xe5, 0x88,
	0x9b, 0xe5, 0xbb, 0xba, 0xe6, 0x96, 0xb0, 0xe7, 0x9a, 0x84, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81,
	0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe3, 0x80, 0x82, 0x12,
	0xe6, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x2a,
	0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x3f, 0x12, 0x12, 0xe5, 0x88, 0xa0, 0xe9, 0x99,
	0xa4, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x29, 0xe6,
	0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0xe5, 0x88, 0xa0,
	0xe9, 0x99, 0xa4, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6,
	0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe3, 0x80, 0x82, 0x12, 0xf1, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x26, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x89, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x1a, 0x35, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d,
	0x3a, 0x01, 0x2a, 0x92, 0x41, 0x46, 0x12, 0x12, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x8e,
	0xa8, 0xe9, 0x80, 0x81, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x30, 0xe6, 0x9b, 0xb4, 0xe6,
	0x96, 0xb0, 0xe7, 0x8e, 0xb0, 0xe6, 0x9c, 0x89, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe9, 0x80,
	0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe7, 0x9a, 0x84, 0xe9, 0x85, 0x8d,
	0xe7, 0xbd, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe3, 0x80, 0x82, 0x12, 0xe6, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x81, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x92, 0x41, 0x4f, 0x12, 0x12, 0xe5, 0x88, 0x97, 0xe5, 0x87, 0xba, 0xe6, 0x8e,
	0xa8, 0xe9, 0x80, 0x81, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x39, 0xe8, 0x8e, 0xb7, 0xe5,
	0x8f, 0x96, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe9, 0x80, 0x9a, 0xe7, 0x9f, 0xa5, 0xe6, 0xa8,
	0xa1, 0xe6, 0x9d, 0xbf, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0xef, 0xbc, 0x8c, 0xe6, 0x94, 0xaf,
	0xe6, 0x8c, 0x81, 0xe5, 0x88, 0x86, 0xe9, 0xa1, 0xb5, 0xe5, 0x92, 0x8c, 0xe8, 0xbf, 0x87, 0xe6,
	0xbb, 0xa4, 0xe3, 0x80, 0x82, 0x12, 0xf3, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x75, 0x73, 0x68,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x73, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x2f, 0x7b,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x7d, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x54, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe6,
	0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x1a, 0x3e, 0xe6, 0xa0, 0xb9,
	0xe6, 0x8d, 0xae, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0x49, 0x44, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe5, 0x8d, 0x95, 0xe4, 0xb8, 0xaa, 0xe6, 0x8e, 0xa8, 0xe9, 0x80, 0x81, 0xe9, 0x80, 0x9a,
	0xe7, 0x9f, 0xa5, 0xe6, 0xa8, 0xa1, 0xe6, 0x9d, 0xbf, 0xe7, 0x9a, 0x84, 0xe8, 0xaf, 0xa6, 0xe7,
	0xbb, 0x86, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0xe3, 0x80, 0x82, 0x42, 0x6d, 0x5a, 0x22, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x63, 0x73, 0x2d, 0x70, 0x75, 0x73, 0x68, 0x2d, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x3b, 0x70, 0x75, 0x73, 0x68, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x92, 0x41, 0x46, 0x12, 0x1d, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x20, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x20, 0x44, 0x6f, 0x63, 0x32, 0x05, 0x30, 0x2e,
	0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_bcs_push_manager_proto_rawDescOnce sync.Once
	file_proto_bcs_push_manager_proto_rawDescData = file_proto_bcs_push_manager_proto_rawDesc
)

func file_proto_bcs_push_manager_proto_rawDescGZIP() []byte {
	file_proto_bcs_push_manager_proto_rawDescOnce.Do(func() {
		file_proto_bcs_push_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_bcs_push_manager_proto_rawDescData)
	})
	return file_proto_bcs_push_manager_proto_rawDescData
}

var file_proto_bcs_push_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_proto_bcs_push_manager_proto_goTypes = []interface{}{
	(*Dimension)(nil),                    // 0: pushmanager.Dimension
	(*EventDetail)(nil),                  // 1: pushmanager.EventDetail
	(*NotificationResults)(nil),          // 2: pushmanager.NotificationResults
	(*MetricData)(nil),                   // 3: pushmanager.MetricData
	(*PushEvent)(nil),                    // 4: pushmanager.PushEvent
	(*CreatePushEventRequest)(nil),       // 5: pushmanager.CreatePushEventRequest
	(*CreatePushEventResponse)(nil),      // 6: pushmanager.CreatePushEventResponse
	(*DeletePushEventRequest)(nil),       // 7: pushmanager.DeletePushEventRequest
	(*DeletePushEventResponse)(nil),      // 8: pushmanager.DeletePushEventResponse
	(*GetPushEventRequest)(nil),          // 9: pushmanager.GetPushEventRequest
	(*GetPushEventResponse)(nil),         // 10: pushmanager.GetPushEventResponse
	(*ListPushEventsRequest)(nil),        // 11: pushmanager.ListPushEventsRequest
	(*ListPushEventsResponse)(nil),       // 12: pushmanager.ListPushEventsResponse
	(*UpdatePushEventRequest)(nil),       // 13: pushmanager.UpdatePushEventRequest
	(*UpdatePushEventResponse)(nil),      // 14: pushmanager.UpdatePushEventResponse
	(*PushWhitelist)(nil),                // 15: pushmanager.PushWhitelist
	(*CreatePushWhitelistRequest)(nil),   // 16: pushmanager.CreatePushWhitelistRequest
	(*CreatePushWhitelistResponse)(nil),  // 17: pushmanager.CreatePushWhitelistResponse
	(*GetPushWhitelistRequest)(nil),      // 18: pushmanager.GetPushWhitelistRequest
	(*GetPushWhitelistResponse)(nil),     // 19: pushmanager.GetPushWhitelistResponse
	(*UpdatePushWhitelistRequest)(nil),   // 20: pushmanager.UpdatePushWhitelistRequest
	(*UpdatePushWhitelistResponse)(nil),  // 21: pushmanager.UpdatePushWhitelistResponse
	(*DeletePushWhitelistRequest)(nil),   // 22: pushmanager.DeletePushWhitelistRequest
	(*DeletePushWhitelistResponse)(nil),  // 23: pushmanager.DeletePushWhitelistResponse
	(*ListPushWhitelistsRequest)(nil),    // 24: pushmanager.ListPushWhitelistsRequest
	(*ListPushWhitelistsResponse)(nil),   // 25: pushmanager.ListPushWhitelistsResponse
	(*ApprovePushWhitelistRequest)(nil),  // 26: pushmanager.ApprovePushWhitelistRequest
	(*ApprovePushWhitelistResponse)(nil), // 27: pushmanager.ApprovePushWhitelistResponse
	(*TemplateContent)(nil),              // 28: pushmanager.TemplateContent
	(*PushTemplate)(nil),                 // 29: pushmanager.PushTemplate
	(*CreatePushTemplateRequest)(nil),    // 30: pushmanager.CreatePushTemplateRequest
	(*CreatePushTemplateResponse)(nil),   // 31: pushmanager.CreatePushTemplateResponse
	(*GetPushTemplateRequest)(nil),       // 32: pushmanager.GetPushTemplateRequest
	(*GetPushTemplateResponse)(nil),      // 33: pushmanager.GetPushTemplateResponse
	(*UpdatePushTemplateRequest)(nil),    // 34: pushmanager.UpdatePushTemplateRequest
	(*UpdatePushTemplateResponse)(nil),   // 35: pushmanager.UpdatePushTemplateResponse
	(*DeletePushTemplateRequest)(nil),    // 36: pushmanager.DeletePushTemplateRequest
	(*DeletePushTemplateResponse)(nil),   // 37: pushmanager.DeletePushTemplateResponse
	(*ListPushTemplatesRequest)(nil),     // 38: pushmanager.ListPushTemplatesRequest
	(*ListPushTemplatesResponse)(nil),    // 39: pushmanager.ListPushTemplatesResponse
	nil,                                  // 40: pushmanager.Dimension.FieldsEntry
	nil,                                  // 41: pushmanager.EventDetail.FieldsEntry
	nil,                                  // 42: pushmanager.NotificationResults.FieldsEntry
	(*timestamp.Timestamp)(nil),          // 43: google.protobuf.Timestamp
}
var file_proto_bcs_push_manager_proto_depIdxs = []int32{
	40, // 0: pushmanager.Dimension.fields:type_name -> pushmanager.Dimension.FieldsEntry
	41, // 1: pushmanager.EventDetail.fields:type_name -> pushmanager.EventDetail.FieldsEntry
	42, // 2: pushmanager.NotificationResults.fields:type_name -> pushmanager.NotificationResults.FieldsEntry
	43, // 3: pushmanager.MetricData.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 4: pushmanager.PushEvent.event_detail:type_name -> pushmanager.EventDetail
	2,  // 5: pushmanager.PushEvent.notification_results:type_name -> pushmanager.NotificationResults
	0,  // 6: pushmanager.PushEvent.dimension:type_name -> pushmanager.Dimension
	3,  // 7: pushmanager.PushEvent.metric_data:type_name -> pushmanager.MetricData
	43, // 8: pushmanager.PushEvent.created_at:type_name -> google.protobuf.Timestamp
	43, // 9: pushmanager.PushEvent.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 10: pushmanager.CreatePushEventRequest.event:type_name -> pushmanager.PushEvent
	4,  // 11: pushmanager.GetPushEventResponse.event:type_name -> pushmanager.PushEvent
	43, // 12: pushmanager.ListPushEventsRequest.start_time:type_name -> google.protobuf.Timestamp
	43, // 13: pushmanager.ListPushEventsRequest.end_time:type_name -> google.protobuf.Timestamp
	4,  // 14: pushmanager.ListPushEventsResponse.events:type_name -> pushmanager.PushEvent
	4,  // 15: pushmanager.UpdatePushEventRequest.event:type_name -> pushmanager.PushEvent
	0,  // 16: pushmanager.PushWhitelist.dimension:type_name -> pushmanager.Dimension
	43, // 17: pushmanager.PushWhitelist.start_time:type_name -> google.protobuf.Timestamp
	43, // 18: pushmanager.PushWhitelist.end_time:type_name -> google.protobuf.Timestamp
	43, // 19: pushmanager.PushWhitelist.approved_at:type_name -> google.protobuf.Timestamp
	43, // 20: pushmanager.PushWhitelist.created_at:type_name -> google.protobuf.Timestamp
	43, // 21: pushmanager.PushWhitelist.updated_at:type_name -> google.protobuf.Timestamp
	15, // 22: pushmanager.CreatePushWhitelistRequest.whitelist:type_name -> pushmanager.PushWhitelist
	15, // 23: pushmanager.GetPushWhitelistResponse.whitelist:type_name -> pushmanager.PushWhitelist
	15, // 24: pushmanager.UpdatePushWhitelistRequest.whitelist:type_name -> pushmanager.PushWhitelist
	15, // 25: pushmanager.ListPushWhitelistsResponse.whitelists:type_name -> pushmanager.PushWhitelist
	28, // 26: pushmanager.PushTemplate.content:type_name -> pushmanager.TemplateContent
	43, // 27: pushmanager.PushTemplate.created_at:type_name -> google.protobuf.Timestamp
	29, // 28: pushmanager.CreatePushTemplateRequest.template:type_name -> pushmanager.PushTemplate
	29, // 29: pushmanager.GetPushTemplateResponse.template:type_name -> pushmanager.PushTemplate
	29, // 30: pushmanager.UpdatePushTemplateRequest.template:type_name -> pushmanager.PushTemplate
	29, // 31: pushmanager.ListPushTemplatesResponse.templates:type_name -> pushmanager.PushTemplate
	5,  // 32: pushmanager.PushManager.CreatePushEvent:input_type -> pushmanager.CreatePushEventRequest
	7,  // 33: pushmanager.PushManager.DeletePushEvent:input_type -> pushmanager.DeletePushEventRequest
	9,  // 34: pushmanager.PushManager.GetPushEvent:input_type -> pushmanager.GetPushEventRequest
	11, // 35: pushmanager.PushManager.ListPushEvents:input_type -> pushmanager.ListPushEventsRequest
	13, // 36: pushmanager.PushManager.UpdatePushEvent:input_type -> pushmanager.UpdatePushEventRequest
	16, // 37: pushmanager.PushManager.CreatePushWhitelist:input_type -> pushmanager.CreatePushWhitelistRequest
	22, // 38: pushmanager.PushManager.DeletePushWhitelist:input_type -> pushmanager.DeletePushWhitelistRequest
	20, // 39: pushmanager.PushManager.UpdatePushWhitelist:input_type -> pushmanager.UpdatePushWhitelistRequest
	24, // 40: pushmanager.PushManager.ListPushWhitelists:input_type -> pushmanager.ListPushWhitelistsRequest
	18, // 41: pushmanager.PushManager.GetPushWhitelist:input_type -> pushmanager.GetPushWhitelistRequest
	30, // 42: pushmanager.PushManager.CreatePushTemplate:input_type -> pushmanager.CreatePushTemplateRequest
	36, // 43: pushmanager.PushManager.DeletePushTemplate:input_type -> pushmanager.DeletePushTemplateRequest
	34, // 44: pushmanager.PushManager.UpdatePushTemplate:input_type -> pushmanager.UpdatePushTemplateRequest
	38, // 45: pushmanager.PushManager.ListPushTemplates:input_type -> pushmanager.ListPushTemplatesRequest
	32, // 46: pushmanager.PushManager.GetPushTemplate:input_type -> pushmanager.GetPushTemplateRequest
	6,  // 47: pushmanager.PushManager.CreatePushEvent:output_type -> pushmanager.CreatePushEventResponse
	8,  // 48: pushmanager.PushManager.DeletePushEvent:output_type -> pushmanager.DeletePushEventResponse
	10, // 49: pushmanager.PushManager.GetPushEvent:output_type -> pushmanager.GetPushEventResponse
	12, // 50: pushmanager.PushManager.ListPushEvents:output_type -> pushmanager.ListPushEventsResponse
	14, // 51: pushmanager.PushManager.UpdatePushEvent:output_type -> pushmanager.UpdatePushEventResponse
	17, // 52: pushmanager.PushManager.CreatePushWhitelist:output_type -> pushmanager.CreatePushWhitelistResponse
	23, // 53: pushmanager.PushManager.DeletePushWhitelist:output_type -> pushmanager.DeletePushWhitelistResponse
	21, // 54: pushmanager.PushManager.UpdatePushWhitelist:output_type -> pushmanager.UpdatePushWhitelistResponse
	25, // 55: pushmanager.PushManager.ListPushWhitelists:output_type -> pushmanager.ListPushWhitelistsResponse
	19, // 56: pushmanager.PushManager.GetPushWhitelist:output_type -> pushmanager.GetPushWhitelistResponse
	31, // 57: pushmanager.PushManager.CreatePushTemplate:output_type -> pushmanager.CreatePushTemplateResponse
	37, // 58: pushmanager.PushManager.DeletePushTemplate:output_type -> pushmanager.DeletePushTemplateResponse
	35, // 59: pushmanager.PushManager.UpdatePushTemplate:output_type -> pushmanager.UpdatePushTemplateResponse
	39, // 60: pushmanager.PushManager.ListPushTemplates:output_type -> pushmanager.ListPushTemplatesResponse
	33, // 61: pushmanager.PushManager.GetPushTemplate:output_type -> pushmanager.GetPushTemplateResponse
	47, // [47:62] is the sub-list for method output_type
	32, // [32:47] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_proto_bcs_push_manager_proto_init() }
func file_proto_bcs_push_manager_proto_init() {
	if File_proto_bcs_push_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_bcs_push_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushWhitelist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushWhitelistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushWhitelistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovePushWhitelistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovePushWhitelistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TemplateContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePushTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPushTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePushTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePushTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bcs_push_manager_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPushTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_bcs_push_manager_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_bcs_push_manager_proto_msgTypes[24].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_bcs_push_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_bcs_push_manager_proto_goTypes,
		DependencyIndexes: file_proto_bcs_push_manager_proto_depIdxs,
		MessageInfos:      file_proto_bcs_push_manager_proto_msgTypes,
	}.Build()
	File_proto_bcs_push_manager_proto = out.File
	file_proto_bcs_push_manager_proto_rawDesc = nil
	file_proto_bcs_push_manager_proto_goTypes = nil
	file_proto_bcs_push_manager_proto_depIdxs = nil
}
